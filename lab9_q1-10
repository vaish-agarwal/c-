Q1) 

*p3= S
*p3= T, p3 = 6940
*p1= S, p1 = 6940

Q2)
 D. *p = 75;

Q3)
 char pointer cannot be converted to double pointer

Q4)

blocks[0] = 'A'
*(blocks + 2) = 'C'
*(ptr + 1) = 'B'
*ptr = 'A'
blocks + 1 = 4435
*ptr = 'B'
*(ptr + 1) ='C'

blocks = 4434
*++ptr = 'B'
++*ptr = 'C'
*ptr++ = 'C'
 *ptr=  'C'

Q5)

char s[10] = "abcde";
char* cptr;

//write your code here
int flag=0;
for(int a=6;a<=0;a--)
{
	if(flag)
	cout<<s[a];
	else
		if(s[a]=='\0')
			flag=1;
}

Q6)

int countEven(int* arr,int size)
{
	int a =0;
	for(int i=0; i<=(size - 1); i++){
	if(arr[i]%2==0)
	a++;
	}
	return a;
}

Q7)

double* maximum(double* a, int size)
{
	double *b=NULL;
	if(size==0)
	return b;
	*b=a[0];
	for(int i=0;i<size;i++)
	if(a[i]<*b)
	*b=a[i];
	return b;
}

Q8)

int myStrLen(char ch*)
{	
	int count=0;
	while(ch*!='\0')
	{
		ch++;
		count++;
	}
	return count;
}

Q9)


bool contains(char* str,char ch)
{	
	char *p=char;
	while(*p!='\0')
	{
		if(*p==ch)
		return 1;
	}
	
	return 0;
}



Q10)

int main()
{
  char s[10] = "abcde";
  revString(s);  // call the function
  return 0;
}

void revtString(char* ptr)
{
	int a=0;
	while(*ptr!='\0')
	{
		ptr++;
		a++;
	}
	char b;
	for(int i=0;i<a/2;i++)
	{
		b=ptr[i];
		ptr[i]=ptr[a-1-i];
		ptr[a-1-i]=b;
	}
}
